<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    
    <title>Discover Our Products</title>
    
    <style>
        :root {
            --primary-color: #2563eb;
            --secondary-color: #1e40af;
            --background-color: #f8fafc;
            --card-hover: #f1f5f9;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--background-color);
        }

        .page-title {
            font-weight: 600;
            color: #0f172a;
            position: relative;
            display: inline-block;
            margin: 0 auto;
        }

        .page-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 50%;
            height: 3px;
            background: var(--primary-color);
            border-radius: 2px;
        }

        .card {
            border: none;
            transition: all 0.3s ease;
            border-radius: 1rem;
            overflow: hidden;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
            background-color: var(--card-hover);
        }

        .card-img-top {
            height: 250px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .card:hover .card-img-top {
            transform: scale(1.05);
        }

        .product-badge {
            position: absolute;
            top: 1rem;
            left: 1rem;
            background: var(--primary-color);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 2rem;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .like-btn {
            transition: transform 0.2s ease;
            cursor: pointer;
        }

        .like-btn:hover {
            transform: scale(1.2);
        }

        .btn-view {
            background: var(--primary-color);
            color: white;
            border-radius: 2rem;
            padding: 0.5rem 1.5rem;
            transition: all 0.3s ease;
        }

        .btn-view:hover {
            background: var(--secondary-color);
            color: white;
            transform: translateX(5px);
        }

        .price {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--primary-color);
        }

        .filters {
            background: white;
            padding: 1rem;
            border-radius: 1rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
        }

        .filter-btn {
            border: 1px solid #e2e8f0;
            background: white;
            padding: 0.5rem 1rem;
            border-radius: 2rem;
            margin: 0.25rem;
            transition: all 0.3s ease;
        }

        .filter-btn:hover, .filter-btn.active {
            background: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        .search-box {
            border-radius: 2rem;
            padding: 0.5rem 1.5rem;
            border: 1px solid #e2e8f0;
        }

        .skeleton {
            animation: skeleton-loading 1s linear infinite alternate;
        }

        @keyframes skeleton-loading {
            0% {
                background-color: #e2e8f0;
            }
            100% {
                background-color: #f1f5f9;
            }
        }

        .card-enter {
            opacity: 0;
            transform: translateY(20px);
        }

        .card-enter-active {
            opacity: 1;
            transform: translateY(0);
            transition: opacity 300ms, transform 300ms;
        }
    </style>
</head>
<body>
    <%- include('partials/navbar') %>
    <%- include('partials/flash') %>
   
    <main class="container mt-5 pt-5">
        <h1 class="text-center page-title mb-5">Discover Our Products</h1>
        
        <!-- Filters Section -->
        <div class="filters">
            <div class="row align-items-center">
                <div class="col-md-4 mb-3 mb-md-0">
                    <input type="text" class="form-control search-box" placeholder="Search products..." id="searchInput">
                </div>
                <div class="col-md-4 mb-3 mb-md-0">
                    <select class="form-select search-box" id="sortSelect">
                        <option value="default">Sort by</option>
                        <option value="price-asc">Price: Low to High</option>
                        <option value="price-desc">Price: High to Low</option>
                        <option value="name-asc">Name: A to Z</option>
                        <option value="name-desc">Name: Z to A</option>
                    </select>
                </div>
                <div class="col-md-4">
                   
                </div>
            </div>
        </div>

        <!-- Products Grid -->
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4" id="productsGrid">
            <% for (let product of data) { %>
                <div class="col product-card" 
                     data-category="<%= product.category %>"
                     data-price="<%= product.price %>"
                     data-name="<%= product.title.toLowerCase() %>">
                    <div class="card h-100 shadow">
                        <div class="position-relative">
                            <img src="<%= product.image %>" alt="<%= product.title %>" class="card-img-top">
                            
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title mb-3 d-flex justify-content-between align-items-center">
                                <%= product.title %>
                                <% if (user && user.wishList.includes(product._id)) { %>
                                    <i productId="<%= product._id %>" class="text-danger fa-heart fa-solid btn like-btn"></i>
                                <% } else { %>
                                    <i productId="<%= product._id %>" class="text-danger fa-heart fa-regular btn like-btn"></i>
                                <% } %>
                            </h5>
                            
                            <p class="card-text flex-grow-1"><%= product.description %></p>
                            <div class="d-flex justify-content-between align-items-center mt-3">
                                <span class="price">$<%= product.price.toFixed(2) %></span>
                                <a href="/products/<%= product._id %>" class="btn btn-view">
                                    View Details <i class="bi bi-arrow-right-short"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            <% } %>
        </div>

        <!-- Loading Skeleton Template -->
        <template id="skeletonTemplate">
            <div class="col">
                <div class="card h-100 shadow">
                    <div class="skeleton" style="height: 250px;"></div>
                    <div class="card-body">
                        <div class="skeleton mb-3" style="height: 24px; width: 70%;"></div>
                        <div class="skeleton mb-2" style="height: 16px; width: 100%;"></div>
                        <div class="skeleton mb-2" style="height: 16px; width: 90%;"></div>
                        <div class="skeleton" style="height: 16px; width: 80%;"></div>
                    </div>
                </div>
            </div>
        </template>
    </main>

    <%- include('partials/footer') %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Elements
            const productsGrid = document.getElementById('productsGrid');
            const searchInput = document.getElementById('searchInput');
            const sortSelect = document.getElementById('sortSelect');
            const categoryFilters = document.getElementById('categoryFilters');
            const products = document.querySelectorAll('.product-card');

            // Filter and sort products
            function updateProducts() {
                const searchTerm = searchInput.value.toLowerCase();
                const sortValue = sortSelect.value;
                const activeCategory = categoryFilters.querySelector('.active').dataset.category;

                // Convert products NodeList to Array for sorting
                let productsArray = Array.from(products);

                // Filter products
                productsArray = productsArray.filter(product => {
                    const matchesSearch = product.dataset.name.includes(searchTerm);
                    const matchesCategory = activeCategory === 'all' || product.dataset.category === activeCategory;
                    return matchesSearch && matchesCategory;
                });

                // Sort products
                productsArray.sort((a, b) => {
                    switch(sortValue) {
                        case 'price-asc':
                            return parseFloat(a.dataset.price) - parseFloat(b.dataset.price);
                        case 'price-desc':
                            return parseFloat(b.dataset.price) - parseFloat(a.dataset.price);
                        case 'name-asc':
                            return a.dataset.name.localeCompare(b.dataset.name);
                        case 'name-desc':
                            return b.dataset.name.localeCompare(a.dataset.name);
                        default:
                            return 0;
                    }
                });

                // Clear grid and append sorted/filtered products
                productsGrid.innerHTML = '';
                productsArray.forEach(product => {
                    product.classList.add('card-enter');
                    productsGrid.appendChild(product);
                    
                    // Trigger reflow
                    void product.offsetWidth;
                    
                    // Add active class for animation
                    product.classList.add('card-enter-active');
                });
            }

            // Event listeners
            searchInput.addEventListener('input', updateProducts);
            sortSelect.addEventListener('change', updateProducts);
            
            categoryFilters.querySelectorAll('.filter-btn').forEach(btn => {
                btn.addEventListener('click', (e) => {
                    categoryFilters.querySelector('.active').classList.remove('active');
                    e.target.classList.add('active');
                    updateProducts();
                });
            });

            // Wishlist functionality
            document.querySelectorAll('.like-btn').forEach(btn => {
                btn.addEventListener('click', async function() {
                    const productId = this.getAttribute('productId');
                    try {
                        const response = await axios.post(`/products/${productId}/toggleWishlist`);
                        if (response.data.success) {
                            this.classList.toggle('fa-regular');
                            this.classList.toggle('fa-solid');
                            
                            // Add heart animation
                            this.style.transform = 'scale(1.3)';
                            setTimeout(() => {
                                this.style.transform = 'scale(1)';
                            }, 200);
                        }
                    } catch (error) {
                        console.error('Error toggling wishlist:', error);
                    }
                });
            });

            // Show loading skeleton
            function showLoading() {
                const template = document.getElementById('skeletonTemplate');
                productsGrid.innerHTML = '';
                for (let i = 0; i < 6; i++) {
                    productsGrid.appendChild(template.content.cloneNode(true));
                }
            }

            // Initialize
            updateProducts();
        });
    </script>
</body>
</html>